<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.ArchiveExamDao">
    <insert id="insertExam">
        insert ignore into archive_exam
            (id,paper_id,name,description,begin_time,end_time,score,teacher_id,kp_code,create_time,
             version,update_time,creator,updater,deleted,place,time_limit,class_id,problem_num)
        select id,paper_id,name,description,begin_time,end_time,score,teacher_id,kp_code,create_time,
               version,update_time,creator,updater,deleted,place,time_limit,class_id,problem_num
        from exam
        where create_time between date_sub(curdate(),interval 1 day) and curdate()
    </insert>

    <select id="selectExamByPage" resultType="net.edu.module.vo.ArchiveExamVO">
        select
            id,paper_id,name,description,begin_time,end_time,score,teacher_id,
            (select real_name  from sys_user t1 where teacher_id = t1.id ) as teacherName,
            kp_code,
            create_time,
            version,
            update_time,
            creator,
            updater,
            deleted,
            place,
            time_limit,
            class_id,
            (select name from teach_class t2 where t2.id = class_id) as className,
            (select name from archive_course t4 where t4.teach_plan_id =
                                                      (select plan_id from teach_class t5 where t5.id = class_id)
                                                ) as courseName,

            problem_num
        from archive_exam
        where deleted = 0
        <if test="query.getName()!='' and query.getName()!=null">
            and  name like concat('%',#{query.name},'%')
        </if>
        <if test="query.getCourse()!='' and query.getCourse()!=null">
            and  (select name from archive_course t4 where t4.teach_plan_id =
            (select plan_id from teach_class t5 where t5.id = class_id)
            ) like concat('%',#{query.course},'%')
        </if>
        <if test="query.getClazz()!='' and query.getClazz()!=null">
            and  (select name from teach_class t2 where t2.id = class_id) like concat('%',#{query.clazz},'%')
        </if>
    </select>

    <select id="selectExamById" resultType="net.edu.module.vo.ArchiveExamVO">
        select
            id,
            paper_id,
            (select name from problem_paper t3 where t3.id = paper_id) as paperName,
            name,description,begin_time,end_time,score,teacher_id,
            (select real_name  from sys_user t1 where teacher_id = t1.id ) as teacherName,
            kp_code,
            (select name from problem_knowledge_point t4 where t4.code = kp_code) as kpName,
            create_time,
            version,
            update_time,
            creator,
            updater,
            deleted,
            place,
            time_limit,
            class_id,
            (select name from teach_class t2 where t2.id = class_id) as className,
            problem_num
        from archive_exam
        where id = #{id}
    </select>

    <select id="selectExamByCourseId" resultType="net.edu.module.vo.ArchiveExamVO">
        select
            id,name,description,begin_time,end_time,score,
            (select real_name  from sys_user t1 where teacher_id = t1.id ) as teacherName,
            (select name from problem_knowledge_point t4 where t4.code = kp_code) as kpName,
            class_id,
            (select name from teach_class t2 where t2.id = class_id) as className
        from archive_exam
        where (select id from archive_course t4 where t4.teach_plan_id =
                                                      (select plan_id from teach_class t5 where t5.id = class_id)
              ) = #{courseId} and class_id = #{classId}

    </select>

    <select id="selectClassByCourseId" resultType="net.edu.module.vo.ClassVO">
        select id,name as className from teach_class
                  where deleted = 0 and plan_id =
        (select teach_plan_id from archive_course where deleted = 0 and id =  #{courseId})
    </select>
</mapper>
