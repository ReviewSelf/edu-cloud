<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.ArchiveWeightTargetCourseDao">

    <resultMap type="net.edu.module.entity.ArchiveWeightTargetCourseEntity" id="archiveWeightTargetCourseMap">
        <result property="id" column="id"/>
        <result property="targetId" column="target_id"/>
        <result property="courseId" column="course_id"/>
        <result property="weight" column="weight"/>
        <result property="deleted" column="deleted"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="creator" column="creator"/>
        <result property="version" column="version"/>
        <result property="updater" column="updater"/>
    </resultMap>


    <select id="selectCourseByTargetId" resultType="net.edu.module.vo.ArchiveWeightTargetCourseVO">
        select
            id,
            target_id as targetId,
            course_id as courseId,
            (select name from archive_course t1 where t1.id = courseId) as courseName,
            weight
        from archive_weight_target_course
        where deleted = 0 and target_id = #{targetId}
    </select>

    <insert id="insertCourseWeight">
        replace into archive_weight_target_course(target_id,course_id,weight)
        values
            <foreach collection="list" item="item" separator=",">
                (#{item.targetId},#{item.courseId},#{item.weight})
            </foreach>
    </insert>

    <update id="updateDeleted">
        update archive_weight_target_course set deleted = 1
        where target_id = #{targetId} and course_id = #{courseId}
    </update>

    <update id="updateDeletedByTarget">
        update archive_weight_target_course set deleted = 1
        where target_id = #{targetId}
    </update>

    <select id="getById" resultType="net.edu.module.vo.ArchiveWeightTargetCourseVO">
        select
            id,
            target_id as targetId,
            course_id as courseId,
            (select name from archive_course t1 where course_id = t1.id) as courseName,
            weight,
            approach,
            teach_target as teachTarget,
            evaluation_basis as evaluationBasis,
            evaluation_method as evaluationMethod
        from  archive_weight_target_course
        where id=#{id}
    </select>

    <select id="selectPointAndTarget" resultType="net.edu.module.vo.ArchivePointAndTargetVO">
        select a.id,a.sys_id,a.name,a.semester,a.teach_class,a.teacher,a.credit,a.place,
               a.assessment,a.course_category,a.class_cycle,b.approach,b.teach_target,
               b.evaluation_basis,b.evaluation_method,b.sort,b.id as teachId,b.goal_name as goalName,
               c.id as pointId,
               CONCAT(c.id,c.name,c.content)as TargetDescription,
               CONCAT('毕业要求',d.id,'(',d.title,')',d.content) as graduateRequire
        from archive_course  a
                 left join archive_weight_target_course  b on a.id=b.course_id
                 left join archive_target c on  b.target_id=c.id
                 left join archive_graduate_require d on d.id =c.graduate_id
            where a.id=#{courseId} and b.deleted = 0
    </select>

    <select id="selectCourseByCourseId" resultType="net.edu.module.vo.ArchiveWeightTargetCourseVO">
        select
            id,
            target_id as targetId,
            course_id as courseId,
            (select name from archive_course t1 where t1.id = courseId) as courseName,
            weight,
            approach,
            teach_target,
            evaluation_basis,
            evaluation_method
        from archive_weight_target_course
        where deleted = 0 and course_id = #{courseId}
    </select>
</mapper>
