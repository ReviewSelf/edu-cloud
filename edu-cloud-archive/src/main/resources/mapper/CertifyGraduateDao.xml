<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.GraduateRequireDao">
    <resultMap type="net.edu.module.entity.GraduateRequireEntity" id="certifyGraduateMap">
        <result property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="version" column="version"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="major" column="major"/>
        <result property="college" column="college"/>
        <result property="school" column="school"/>
        <result property="deleted" column="deleted"/>
    </resultMap>


    <select id="selectGraduateRequireByPage" resultType="net.edu.module.vo.GraduateRequireVO">
        select
        t2.id,
        title,
        content,
        major,
        grade,
        (select name from sys_org t1 where major = t1.id)as majorName,
        college,
        (select name from sys_org t1 where college = t1.id)as collegeName,
        school,
        (select name from sys_org t1 where school = t1.id)as schoolName
        from archive_graduate_require t2
        where t2.deleted = 0
        <if test="query.getTitle() !=null and query.getTitle()!=''">
            and title like concat('%',#{query.title},'%')
        </if>
        <if test="query.getOrgId() !=null and query.getOrgId().size() > 0">
             and major =  #{query.orgId[2]}
             and college = #{query.orgId[1]}
             and school = #{query.orgId[0]}
        </if>
        <if test="query.getGrade() !=null and query.getGrade()!=''">
            and grade = #{query.grade}
        </if>
        order by grade desc
    </select>

    <insert id="insertGraduateRequire">
        replace INTO archive_graduate_require (title,content,major,college,school,grade,create_time,creator,version)
        VALUES (#{title},#{content},#{major},#{college},#{school},#{grade},now(),'10000',0)
    </insert>

    <select id="selectGraduateByGrade" resultType="net.edu.module.entity.GraduateRequireEntity">
        select id,title from archive_graduate_require where grade = #{grade}
    </select>
</mapper>

