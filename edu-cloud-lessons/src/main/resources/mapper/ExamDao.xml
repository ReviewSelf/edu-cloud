<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.ExamDao">

    <resultMap type="net.edu.module.entity.ExamEntity" id="examMap">
        <result property="id" column="id"/>
        <result property="paperId" column="paper_id"/>
        <result property="description" column="description"/>
        <result property="beginTime" column="begin_time"/>
        <result property="endTime" column="end_time"/>
        <result property="score" column="score"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="kpId" column="kp_id"/>
        <result property="createTime" column="create_time"/>
        <result property="version" column="version"/>
        <result property="updateTime" column="update_time"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="deleted" column="deleted"/>
        <result property="name" column="name"/>
        <result property="classId" column="class_id"></result>
        <result property="problemNum" column="problem_num"></result>
        <result property="place" column="place"/>
    </resultMap>
    <select id="page" resultType="net.edu.module.vo.ExamVO">
        select id,
               description,
               begin_time as beginTime,
               end_time as endTime,
               score,
               paper_id as paperId,
               class_id as classId,
               teacher_id as teacherId,
               kp_id as kpId,
               name,
               place
        from exam
        where deleted=0
          <if test="query.beginTime !=null or query.endTime !=null">
            and begin_time &gt;=#{query.beginTime} and begin_time &lt;=#{query.endTime}
          </if>
        <if test="query.endTime ==null">
            and end_time &gt;=now()
        </if>
        <if test="query.name != null">
            and name like '%${query.name}%'
        </if>

    </select>

    <select id="studentPage" resultType="net.edu.module.vo.ExamVO">
        select a.name as name , c.name as className , a.place as place , a.description as description , a.begin_time as beginTime,
               a.end_time as endTime , d.real_name as teacherName
        from exam a
        join exam_attend_log b on b.user_id = #{query.userId}
        join teach_class c on c.id = a.class_id
        join sys_user d on d.id = a.teacher_id
        where a.paper_id = b.exam_id and a.deleted = 0
        <if test="query.name != null and query.name != ''">
            and a.name = #{query.name}
        </if>
        <if test="query.className != null and query.className != ''">
            and c.name = #{query.className}
        </if>
        <if test="query.getPlace() != null and query.getPlace()  != ''">
            and a.place = #{query.place}
        </if>
<!--        <if test="query.getPlace()  != null and query.getPlace()  != ''">-->
<!--            and a.description = #{query.description}-->
<!--        </if>-->
        <if test="query.getBeginTime() !=null and query.getBeginTime()!='' and query.getEndTime() !=null and query.getEndTime()!=''">
            and a.begin_time between  #{query.beginTime} and #{query.endTime}
        </if>
        <if test="query.teacherName != null and query.teacherName != ''">
            and d.real_name = #{query.teacherName}
        </if>
    </select>

    <select id="getExamingList" resultType="net.edu.module.vo.ExamVO">
        select a.name as name , c.name as className , a.place as place , a.begin_time as beginTime,
               a.end_time as endTime , d.real_name as teacherName , a.time_limit as timeLimit
        from exam a
        join exam_attend_log b on b.user_id = #{userId}
        join teach_class c on c.id = a.class_id
        join sys_user d on d.id = a.teacher_id
        where a.paper_id = b.exam_id
          and a.deleted = 0
            and now() between a.begin_time and a.end_time
    </select>

</mapper>