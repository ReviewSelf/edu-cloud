<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.ExamDao">

    <resultMap type="net.edu.module.entity.ExamEntity" id="examMap">
        <result property="id" column="id"/>
        <result property="paperId" column="paper_id"/>
        <result property="description" column="description"/>
        <result property="beginTime" column="begin_time"/>
        <result property="endTime" column="end_time"/>
        <result property="score" column="score"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="kpCode" column="kp_code"/>
        <result property="createTime" column="create_time"/>
        <result property="version" column="version"/>
        <result property="updateTime" column="update_time"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="deleted" column="deleted"/>
        <result property="name" column="name"/>
        <result property="classId" column="class_id"></result>
        <result property="problemNum" column="problem_num"></result>
        <result property="place" column="place"/>
    </resultMap>
    <select id="page" resultType="net.edu.module.vo.ExamVO">
        select a.id,
               (select name from teach_class b where b.id=a.class_id) as className,
               a.description,
               a.begin_time as beginTime,
               a.end_time as endTime,
               a.score,
               a.time_limit as timeLimit,
               a.paper_id as paperId,
               a.class_id as classId,
               a.teacher_id as teacherId,
               a.kp_code as kpCode,
               a.name,
               a.place
        from exam a
        where deleted=0
          <if test="query.beginTime !=null or query.endTime !=null">
            and begin_time &gt;=#{query.beginTime} and begin_time &lt;  DATE_ADD(#{query.endTime},INTERVAL 1 day)
          </if>
        <if test="query.name != null">
            and name like concat('%',#{query.name},'%')
        </if>
        order by end_time &lt;= now() ,if(end_time &lt;= now(),0,end_time) ,end_time desc

    </select>

    <select id="studentPage" resultType="net.edu.module.vo.ExamVO">
        select a.id,a.name as name , (select name from teach_class where id=a.class_id) as className , a.place as place , a.begin_time as beginTime,
        a.end_time as endTime , (select  real_name from sys_user where id=a.teacher_id) as teacherName , a.time_limit as timeLimit,
        b.status,b.is_correcting as isCorrecting
        from exam a
        join exam_attend_log b on  a.id = b.exam_id and  b.user_id = #{query.userId}
        where  a.deleted = 0
        <if test="query.name != null and query.name != ''">
            and a.name = #{query.name}
        </if>
        <if test="query.className != null and query.className != ''">
            and c.name = #{query.className}
        </if>
        <if test="query.getPlace() != null and query.getPlace()  != ''">
            and a.place = #{query.place}
        </if>
        <if test="query.getBeginTime() !=null and query.getBeginTime()!='' and query.getEndTime() !=null and query.getEndTime()!=''">
            and a.begin_time between  #{query.beginTime} and #{query.endTime}
        </if>
        <if test="query.teacherName != null and query.teacherName != ''">
            and d.real_name = #{query.teacherName}
        </if>
    </select>

    <select id="getExamingList" resultType="net.edu.module.vo.ExamVO">
        select a.id,a.name as name , (select name from teach_class where id=a.class_id) as className , a.place as place , a.begin_time as beginTime,
               a.end_time as endTime , (select  real_name from sys_user where id=a.teacher_id) as teacherName , a.time_limit as timeLimit,
               b.status , a.paper_id as paperId , a.problem_num as problemNum
        from exam a
        join exam_attend_log b on a.id = b.exam_id and  b.user_id = #{userId}
        where  a.deleted = 0
            and   a.end_time &gt;= now()
    </select>

    <select id="selectPaperManage" resultType="net.edu.module.vo.ExamVO">
        select name as name , begin_time as beginTime , end_time as endTime , score as score , time_limit as timeLimit , problem_num as problemNum
        from exam
        where paper_id = #{paperId} and deleted = 0
    </select>









</mapper>