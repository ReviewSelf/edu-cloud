<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.LessonDao">

    <resultMap type="net.edu.module.vo.LessonVO" id="lessonMap">
        <result property="id" column="id"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="classId" column="class_id"/>
        <result property="name" column="name"/>
        <result property="className" column="className"/>
        <result property="place" column="place"/>
        <result property="beginTime" column="begin_time"/>
        <result property="endTime" column="end_time"/>
        <result property="status" column="status"/>
        <result property="homeworkBeginTime" column="homework_begin_time"/>
        <result property="homeworkEndTime" column="homework_end_time"/>
        <result property="homeworkStatus" column="homework_status"/>
    </resultMap>
    <select id="selectStudentPage" resultType="net.edu.module.vo.LessonVO">
        SELECT b.id,b.teacher_id as teacherId,b.name,b.status
        ,(select real_name from sys_user where id=b.teacher_id) as teacherName
        ,b.class_id as classId ,(select name from teach_class where id=b.class_id) as className
        ,b.place,b.begin_time as beginTime,b.end_time as endTime
        FROM lesson_attend_log a join lesson b on a.lesson_id=b.id and b.deleted=0  where stu_id=#{query.userId}
        <if test="query.getName()!=null and query.getName()!=''">
            and name like concat('%',#{query.name},'%')
        </if>
        <if test="query.getClassId()!=null">
            and t.class_id=#{query.classId}
        </if>
        order by endTime &lt;= now() ,if(endTime &lt;= now(),0,endTime) ,endTime desc
    </select>

    <select id="selectTeacherPage" resultType="net.edu.module.vo.LessonVO">
        select t.id,t.teacher_id ,name,status,(select real_name from sys_user where id=t.teacher_id) as teacherName,
               t.class_id ,(select name from teach_class where id=t.class_id) as className,t.place,
               t.begin_time as beginTime,t.end_time as endTime   from lesson t
               where (exists (select 1 from teach_class a where a.deleted =0 and (a.teacher1_id=#{query.userId} or a.teacher2_id=#{query.userId} )
        and a.id=t.class_id) or t.teacher_id=#{query.userId})
                 and t.deleted=0

        <if test="query.getName()!=null and query.getName()!=''">
            and name like concat('%',#{query.name},'%')
        </if>
        <if test="query.getClassId()!=null">
            and t.class_id=#{query.classId}
        </if>
        order by endTime &lt;= now() ,if(endTime &lt;= now(),0,endTime) ,endTime desc
    </select>

    <update id="updateHomework">
        UPDATE lesson SET homework_begin_time = #{vo.homeworkBeginTime},homework_end_time = #{vo.homeworkEndTime},homework_status = #{vo.homeworkStatus}
        WHERE id=#{vo.id} AND deleted=0
    </update>

    <select id="selectHomeworkBegin" resultType="net.edu.module.vo.WxWorkPublishVO">
        SELECT
            concat(className,lessonName,"课后作业") as content,
            concat("本次作业共",num,"题，请按时完成") as demand,
            userId ,
            now() as sendTime ,
            t3.homework_end_time as endTime FROM
            (
                SELECT t1.stu_id as userId,
                       (SELECT real_name FROM sys_user where id= t1.stu_id)as studentName,
                       (SELECT name FROM teach_class WHERE id=t1.class_id) as className,t1.lessonName,t2.num,t1.homework_end_time
                FROM
                    (select  b.stu_id ,a.name as lessonName,a.class_id , a.homework_end_time
                     from lesson a LEFT JOIN lesson_attend_log b on b.lesson_id=a.id
                     where a.id = #{lessonId}) t1,(SELECT count(1) as num FROM lesson_problem WHERE lesson_id=#{lessonId} and type=2) t2
            ) t3
    </select>

    <select id="selectHomeworkEnd" resultType="net.edu.module.vo.WxWorkDeadlineVO">
        select
        "手机端或电脑端" as submitMethod
        , user_id as userId
        , CONCAT("还有" , sum(ISNULL(submit_status)) , "道题未完成，请抓紧时间完成") as remark
        , now() as sendTime
        , end_time as deadline
        FROM (SELECT c.user_id, c.lesson_id, c.problem_name, c.problem_id, c.problem_type, c.type, submit_status , c.end_time
        FROM (SELECT a.stu_id as user_id, a.lesson_id, b.problem_name, b.problem_id, b.problem_type, b.type , b.end_time
        FROM lesson_attend_log a
        left join lesson_problem b on b.lesson_id = a.lesson_id
        WHERE a.lesson_id = #{lessonId}) c
        left join (select user_id, problem_id, problem_type, source, submit_status
        from judge_record jr1
        where source_id = #{lessonId}
        and not exists(select 1
        from judge_record jr2
        where source_id = #{lessonId}
        and jr1.problem_id = jr2.problem_id
        and jr1.problem_type = jr2.problem_type
        and jr1.source_id = jr2.source_id
        and jr1.user_id = jr2.user_id
        and jr1.source = jr2.source
        and jr1.id &lt; jr2.id)) d
        on c.problem_id = d.problem_id and c.problem_type = d.problem_type and
        c.type = d.source and c.user_id = d.user_id
        where type=2
        ) tt
        GROUP BY user_id , end_time
    </select>

    <select id="selectHomeworkPage" resultMap="lessonMap">
        select b.id,b.teacher_id ,b.name,b.status,(select real_name from sys_user where id=b.teacher_id) as teacherName,b.class_id,
               (select name from teach_class where id=b.class_id) as className,b.place,b.begin_time ,b.end_time,
               b.homework_begin_time,b.homework_end_time,b.homework_status
        FROM lesson_attend_log a join lesson b on a.lesson_id=b.id and b.deleted=0  where stu_id=#{query.userId}
        and  b.homework_status > 0
        <if test="query.getName()!=null and query.getName()!=''">
            and b.name like concat('%',#{query.name},'%')
        </if>
        <if test="query.getClassId()!=null">
            and b.class_id=#{query.classId}
        </if>
        order by b.homework_status ,b.homework_end_time &lt;= now() ,if(b.homework_end_time &lt;= now(),0,b.homework_end_time) ,b.homework_end_time desc
    </select>

<!--    <select id="selectLessonIdList" resultType="net.edu.module.vo.LessonVO">-->
<!--        select id,homework_end_time as homeworkEndTime from lesson where homework_status = 1 and deleted = 0-->
<!--    </select>-->

    <select id="getListById" resultType="net.edu.module.vo.LessonVO">
        select
            id,
            name,
            teacher_id,
            place,
            begin_time,
            end_time
        from lesson where class_id = #{classId} and end_time > date_format(now(),'%Y-%m-%d')
    </select>

    <select id="getClassAllLesson" resultType="net.edu.module.vo.LessonVO">
        select
            id,
            name,
            teacher_id,
            place,
            begin_time,
            end_time
        from lesson where class_id = #{classId}
    </select>

    <update id="deleteByClassId">
        update lesson set deleted=1 where class_id = #{classId}
    </update>

    <update id="updateList" parameterType="net.edu.module.vo.LessonVO">
        update lesson set begin_time=#{beginTime},end_time=#{endTime} where id = #{id}
    </update>

</mapper>
