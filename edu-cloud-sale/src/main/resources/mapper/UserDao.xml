<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.UserDao">

	<select id="selectStudentByPage" resultType="net.edu.module.vo.UserVO">
		SELECT
		t1.id,
		t1.username,
		t1.stu_number,
		t1.real_name,
		t1.gender,
		t1.email,
		t1.mobile,
		t1.sale_status,
		t1.address,
		t1.age,
		t1.grade,
		t1.total_amount,
		t1.balance,
		t1.total_money,
		t1.area,
		t2.role_id,
		t1.sale_id,
		t1.reading_school,
		t1.urgent_identity,
		t1.urgent_phone,
		(select communicate_time from communicate t4 where t1.id = t4.stu_id
		                                             order by communicate_time desc limit 1)
		                                             as communicateTime,
		(select count(*) from communicate t4 where t1.id = t4.stu_id ) as communicate,
		t1.purpose_level,
		t1.purpose,
		(select real_name from sys_user t3 where t3.id = t1.sale_id) as saleName
		FROM
		sys_user t1
		LEFT JOIN sys_user_role t2 ON t1.id=t2.user_id
		WHERE
		t1.deleted = 0
		and t1.cadets = 0
		and t2.role_id = 2
		and t2.deleted = 0
		<if test="query.getStuNumber() != null and query.getStuNumber() != ''">
			and t1.stu_number like concat('%',#{query.stuNumber},'%')
		</if>
		<if test="query.getBeginTime() != null and query.getBeginTime() != ''">
			and (select communicate_time from communicate t4 where t1.id = t4.stu_id
			order by communicate_time desc limit 1) between #{query.beginTime} and #{query.endTime}
		</if>
		<if test="query.getRealName() != null and query.getRealName() != ''">
			and t1.real_name like concat(#{query.realName},'%')
		</if>
		order by t1.sale_status,communicate,t1.create_time desc,t1.update_time desc
	</select>

	<insert id="insertCadet" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user
		(id,
		 username,
		 stu_number,
		 password,
		 real_name,
		 avatar,
		 gender,
		 email,
		 mobile,
		 org_id,
		 status,
		 address,
		 age,
		 grade,
		 integral,
		 balance,
		 total_amount,
		 total_money,
		 area,
		 cadets,
		 sale_id,
		 union_id,
		 open_id,
		 create_time)
		values (  #{id}, #{stuNumber},#{stuNumber}, #{password},#{realName}, #{avatar}, #{gender},
		        #{email}, #{mobile}, #{orgId}, #{status} , #{address} ,
		        #{age}, #{grade}, #{integral}, 0 , 0 , 0.00 ,#{area}, 0, #{saleId},
		        #{unionId},#{openId},now()
		        )

	</insert>

	<select id="selectUserStatus" resultType="java.lang.Integer">
		select count(1)  from sys_user where cadets=0 and deleted = 0
		UNION ALL
		select count(1)  from
			(select s.id from sys_user s right join communicate c on s.id=c.stu_id where s.cadets=0 and s.deleted = 0 GROUP BY s.id ) as t1
		UNION ALL
		SELECT count(1) from sys_user WHERE sale_status=1 and cadets=0 and deleted = 0
		UNION ALL
		SELECT count(1)  from sys_user WHERE sale_status=2 and cadets=0 and deleted = 0
	</select>

	<select id="selectStuNumber" resultType="java.lang.String">
		select stu_number from sys_user order by stu_number desc limit 1
	</select>



	<update id="updateUserAfterPay">
		update sys_user s ,teach_class_hours t set
							 s.sale_status = 2,
							 t.total_money = t.total_money + cast(#{payment} as decimal(8,2)),
		<if test="type == 0">
			t.normal = t.normal + cast(#{classHours} as decimal(5,1)),
		    t.normal_present =  t.normal_present  + cast(#{presentHours} as decimal(5,1))
		</if>
		<if test="type == 1">
			t.training = t.training + cast(#{classHours} as decimal(5,1)),
			t.training_present =  t.training_present  + cast(#{presentHours} as decimal(5,1))
		</if>
		where s.id = #{userId} and t.user_id = #{userId}
	</update>

	<update id="returnBack" >
		update teach_class_hours t set
		<if test="type == 0">
			t.normal = t.normal - cast(#{classHours} as decimal(5,1))
		</if>
		<if test="type == 1">
			t.training = t.training - cast(#{classHours} as decimal(5,1))
		</if>
		where t.user_id = #{userId}
	</update>

	<select id="selectSaleName" resultType="net.edu.module.vo.UserVO">
		select s.id,real_name from sys_user s left join sys_user_role r on s.id = r.user_id
		                      where r.deleted = 0 and role_id = 4
	</select>
</mapper>
