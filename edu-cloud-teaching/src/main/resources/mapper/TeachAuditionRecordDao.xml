<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.TeachAuditionRecordDao">

    <resultMap type="net.edu.module.entity.TeachAuditionRecordEntity" id="teachAuditionRecordMap">
        <result property="id" column="id"/>
        <result property="studentId" column="student_id"/>
        <result property="dateTime" column="date_time"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="version" column="version"/>
        <result property="updateTime" column="update_time"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="deleted" column="deleted"/>
    </resultMap>

    <select id="selectAuditionRecordPage" resultType="net.edu.module.vo.TeachAuditionRecordVO">
        select t.id ,t.student_id as studentId,a.stu_number as stuNumber,a.real_name as studentName,t.lesson_id as lessonId,
               b.name as lessonName,t.remarks,t.date_time as dateTime,t.status
        from teach_audition_record t left join sys_user a on t.student_id = a.id left join lesson b on  t.lesson_id = b.id
        where t.deleted = 0
                <if test="query.getStudentName!=null and query.getStudentName!=''">
                   and a.real_name like concat('%',#{query.studentName},'%')
                </if>
                <if test="query.getLessonName!=null and query.getLessonName!=''">
                   and b.name like concat('%',#{query.lessonName},'%')
                </if>
                <if test="query.getStatus!=null ">
                   and t.status = #{query.status}
                </if>
                order by t.status , t.create_time desc
    </select>

    <select id="selectNewStudentAuditionRecordPage" resultType="net.edu.module.vo.TeachAuditionRecordVO">
        select t.id,t.student_id as studentId,a.username as studentUserName,a.real_name as studentName,a.stu_number as stuNumber,t.lesson_id as lessonId,
        b.name as lessonName,t.remarks,t.date_time as dateTime,t.status,a.purpose as purpose,
        (select real_name from sys_user where id = a.sale_id) as saleTeachName
        from teach_audition_record t left join sys_user a on t.student_id = a.id left join lesson b on  t.lesson_id = b.id
        where t.deleted = 0 and a.cadets = 0
        <if test="query.getStudentName!=null and query.getStudentName!=''">
            and a.real_name like concat('%',#{query.studentName},'%')
        </if>
        <if test="query.getLessonName!=null and query.getLessonName!=''">
            and b.name like concat('%',#{query.lessonName},'%')
        </if>
        <if test="query.getStatus!=null ">
            and t.status = #{query.status}
        </if>
        order by t.status , dateTime desc
    </select>

    <insert id="insertLessonAttendLog">
        insert into lesson_attend_log(stu_id,lesson_id) values(#{vo.studentId},#{vo.lessonId})
    </insert>

    <update id="updateUserAuditionStatus">
        update sys_user set sale_status=1 , purpose = #{purpose},purpose_level = #{purposeLevel} where id = #{stuId}
    </update>

    <select id="getAuditionRecordDetail" resultType="net.edu.module.vo.TeachAuditionRecordVO">
        select
            t.student_id as studentId,
            s.real_name as studentName,
            s.stu_number as stuNumber,
            t.remarks,
            t.status,
            l.plan_item_id,
            s.purpose as purpose,
            s.mobile,
            s.urgent_identity as urgent,
            (select real_name from sys_user where id = s.sale_id) as saleTeachName,
            (select name from teach_plan_item x where l.plan_item_id = x.id) as planName,
            l.name as lessonName,
            l.place as lessonPlace,
            l.teacher_id,
            (select real_name from sys_user s where l.teacher_id = s.id) as lessonTeacher,
            l.begin_time as beginTime,
            l.end_time as endTime
        from teach_audition_record t inner join lesson l on t.lesson_id=l.id
                                     left join sys_user s on t.student_id = s.id
        where t.id = #{id}
    </select>
</mapper>