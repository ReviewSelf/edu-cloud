<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.edu.module.dao.UserDao">

	<select id="selectTeacherList" resultType="net.edu.module.vo.TeacherVO">
		SELECT
		t1.id,
		t1.username,
		t1.real_name,
		t1.avatar,
		t1.gender,
		t1.email,
		t1.mobile,
		t1.org_id,
		t1.super_admin,
		t1.status,
		t1.version,
		t1.deleted,
		t1.creator,
		t1.create_time,
		t1.updater,
		t1.update_time,
		(select t3.name from sys_org t3 where t3.id = t1.org_id) orgName,
		t2.role_id
		FROM
		sys_user t1
		LEFT JOIN sys_user_role t2 ON t1.id=t2.user_id
		WHERE
		t1.super_admin = 0
		AND t1.deleted = 0
		AND t2.role_id = 1
		<if test="query.getUsername() != null and query.getUsername() != ''">
			and t1.username like concat(#{query.username},'%')
		</if>
		<if test="query.getMobile() != null and query.getMobile() != ''">
			and t1.mobile like concat(#{query.mobile},'%')
		</if>
		<if test="query.getRealName() != null and query.getRealName() != ''">
			and t1.real_name like concat(#{query.realName},'%')
		</if>
	</select>
	<select id="selectStudentList" resultType="net.edu.module.entity.UserEntity">
		SELECT
		t1.id,
		t1.username,
		t1.real_name,
		t1.avatar,
		t1.gender,
		t1.email,
		t1.mobile,
		t1.org_id,
		t1.super_admin,
		t1.status,
		t1.address,
		t1.age,
		t1.grade,
		t1.integral,
		t1.balance,
		t1.area,
		t1.urgent_phone as urgentPhone,
		t1.reading_school as readingSchool,
		t1.total_amount as totalAmount,
		t1.total_money as totalMoney,
		t1.likes_num as likesNum,
		t3.name as orgName,
		t2.role_id,
		(select sum(1) from teach_class_user where  user_id = t1.id and deleted=0 and status=1) as readingClassNum
		FROM
		sys_user t1
		LEFT JOIN sys_user_role t2 ON t1.id=t2.user_id
		left join sys_org t3 on t1.org_id=t3.id
		WHERE
		 t1.deleted = 0
		and t2.role_id = 2
		and t2.deleted = 0
		and t3.deleted = 0
		<if test="query.getUsername() != null and query.getUsername() != ''">
			and t1.username like concat(#{query.username},'%')
		</if>
		<if test="query.getMobile() != null and query.getMobile() != ''">
			and t1.mobile like concat(#{query.mobile},'%')
		</if>
		<if test="query.getRealName() != null and query.getRealName() != ''">
			and t1.real_name like concat(#{query.realName},'%')
		</if>
		<if test="query.getBalance() != null ">
			and t1.balance &lt;= #{query.balance}
		</if>
		<if test="query.getOrgArr() != null and query.getOrgArr().size() > 0">
		<foreach collection="query.getOrgArr()" item="item" open="and t1.org_id in(" close=")" separator=",">
			#{item}
		</foreach>
		</if>
		order by t1.balance
	</select>

	<select id="getById" resultType="net.edu.module.entity.UserEntity">
		select
		    t1.id,
		    t1.username,
		    t1.real_name,
		    t1.avatar,
		    t1.gender,
		    t1.email,
		    t1.mobile,
		    t1.org_id,
		    t1.super_admin,
		    t1.status,
		    t1.address,
		    t1.age,
		    t1.grade,
		    t1.integral,
		    t1.balance,
		    t1.area,
			(select t2.name from sys_org t2 where t2.id = t1.org_id) orgName from sys_user t1
			where t1.id = #{id} and t1.deleted = 0
	</select>

	<select id="getRoleUserList" resultType="net.edu.module.entity.UserEntity">
		select
		    t1.id,
		    t1.username,
		    t1.real_name,
		    t1.avatar,
		    t1.gender,
		    t1.email,
		    t1.mobile,
		    t1.org_id,
		    t1.super_admin,
		    t1.status,
		    t1.address,
		    t1.age,
		    t1.grade,
		    t1.integral,
		    t1.balance,
		    t1.area
		from sys_user t1 left join sys_user_role t2 on t1.id = t2.user_id
		where t1.deleted = 0 and t2.deleted = 0 and t2.role_id = #{roleId}
		<if test="username != null and username.trim() != ''">
			and t1.username = concat('%',#{username},'%')
		</if>
		<if test="mobile != null and mobile.trim() != ''">
			and t1.mobile = concat('%',#{mobile},'%')
		</if>
		<if test="gender != null">
			and t1.gender = #{gender}
		</if>
	</select>

	<select id="getTeacher" resultType="net.edu.module.vo.AllTeacherVO">
		select t1.id,real_name
		from sys_user t1
				 LEFT JOIN sys_user_role t2 ON t1.id=t2.user_id
		where t1.deleted=0 and t2.role_id=1
	</select>

	<update id="updateSubmitCorrectTimes">
		update sys_user set
			submit_times=submit_times+1,
			correct_times=correct_times+#{correct}
		where id = #{userId}
	</update>

	<select id="getStudentId" resultType="String">
		select
		id
		from sys_user
		where union_id=#{unionId}
	</select>
    <select id="getOrgList" resultType="net.edu.module.vo.OrgVo">
		select id,pid,name,sort
		from sys_org
		where deleted = 0
		order by sort asc
	</select>

    <select id="selectStudents" resultType="net.edu.module.vo.TeachStudentVO">
		select
		t1.user_id as userId,
		t2.username,
		t2.real_name,
		t2.mobile
		from teach_class_user t1
		left join sys_user t2 on t1.user_id = t2.id
		where t1.class_id = #{vo.classId}
	</select>

	<select id="getAffairTeacherList" resultType="net.edu.module.vo.AffairTeacherVO">
		SELECT
		t1.id,
		t1.username,
		t1.real_name,
		t1.avatar,
		t1.gender,
		t1.email,
		t1.mobile,
		t1.org_id,
		t1.super_admin,
		t1.status,
		t1.version,
		t1.deleted,
		t1.creator,
		t1.create_time,
		t1.updater,
		t1.update_time,
		(select t3.name from sys_org t3 where t3.id = t1.org_id) orgName,
		t2.role_id as roleId
		FROM
		sys_user t1
		LEFT JOIN sys_user_role t2 ON t1.id=t2.user_id
		WHERE
		t1.super_admin = 0
		AND t1.deleted = 0 AND t2.role_id = 3
		<if test="username != null and username.trim() != ''">
			and t1.username like concat('%',#{username},'%')
		</if>
		<if test="mobile != null and mobile.trim() != ''">
			and t1.mobile = #{mobile}
		</if>
		<if test="gender != null">
			and t1.gender = #{gender}
		</if>
	</select>

	<update id="renewAmountSubmit" >
		update sys_user set total_amount = total_amount + #{num} , balance = balance +#{num} where id = #{userId}
	</update>

	<update id="deductionAmountSubmit" >
		update sys_user set  balance = balance -#{num} where id = #{userId}
	</update>

	<update id="increaseAmountSubmit" >
		update sys_user set  balance = balance +#{num} where id = #{userId}
	</update>

	<update id="updateUserAfterPay">
		update sys_user set  balance = balance + #{balance},
		                     sale_status = 2,
		                     total_amount = total_amount + #{balance},
		                     total_money = total_money + cast(#{payment} as decimal(8,2))
		                where id = #{userId}
	</update>
</mapper>